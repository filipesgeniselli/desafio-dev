version: '3'

services:
  zookeeper:
    networks:
      - kafka
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    networks:
      - kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    networks:
      - kafka
    image: obsidiandynamics/kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - zookeeper
      - kafka

  keycloak:
    networks:
      - keycloak
      - data
    build:
      context: docker/keycloak
      dockerfile: keycloak.Dockerfile
    ports:
      - 8443:8443
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - postgres

  postgres:
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Admin1234
      POSTGRES_USER: desafio
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    build:
      context: docker/postgres
      dockerfile: postgres.Dockerfile
    networks:
      - data

networks:
  kafka:
    name: "kafka_network"
  keycloak:
    name: "keycloak_network"
  backend:
  frontend:
  data:

volumes:
  postgres_data: